version: '3'

services:
  synapse:
    image: matrixdotorg/synapse:latest
    container_name: synapse
    ports:
      - '8008:8008'
    volumes:
      - ./docker/synapse:/data
    environment:
      SYNAPSE_CONFIG_PATH: /data/homeserver.yaml
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:13-alpine
    container_name: synapse-postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: synapse
      POSTGRES_PASSWORD: changeme
      POSTGRES_DB: template1
      LANG: C
      LC_COLLATE: C
      LC_CTYPE: C
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres:/docker-entrypoint-initdb.d
    command: postgres -c default_text_search_config='pg_catalog.simple'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U synapse']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: chatgenius-redis
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    restart: unless-stopped

  bot:
    build:
      context: ./app
      dockerfile: Dockerfile.bot
    container_name: matrix-bot
    volumes:
      - ./app:/app
      - /app/node_modules
    env_file:
      - ./app/.env.bot.docker
    restart: unless-stopped
    depends_on:
      - synapse

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: slack-clone-app
    ports:
      - '80:80'
    volumes:
      - ./app:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - ./app/.env.production
    restart: unless-stopped
    depends_on:
      - synapse
      - redis

volumes:
  postgres-data:
  redis-data:
